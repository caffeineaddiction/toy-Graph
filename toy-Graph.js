// Generated by CoffeeScript 1.7.1
(function() {
  var toyGraph;

  toyGraph = (function() {
    function toyGraph(EleID) {
      this.EleID = EleID;
      this.canvas = document.getElementById(this.EleID);
      this.context = this.canvas.getContext('2d');
      this.bgColor = 'rgba(0,0,0,.75)';
      this.width = this.canvas.width || 100;
      this.height = this.canvas.height || 50;
      this.Stroke_Width = 1 + ((this.height + this.width) / 200);
      this.Graph_X_Min = this.width * 0.02;
      this.Graph_X_Max = this.width * 0.98;
      this.Graph_Y_Min = this.height * 0.10;
      this.Graph_Y_Max = this.height * 0.90;
    }

    toyGraph.prototype.resize = function() {};

    toyGraph.prototype.draw = function(aData, aColor) {
      var i, idx, idxi, n, tCurrent, tData, tDif, tMax, tMin, tSca, tX, tY, _i, _j, _k, _len, _len1, _len2;
      tMax = -aData[0];
      tMin = -aData[0];
      for (_i = 0, _len = aData.length; _i < _len; _i++) {
        i = aData[_i];
        n = -i;
        if (n > tMax) {
          tMax = n;
        }
        if (n < tMin) {
          tMin = n;
        }
      }
      tDif = 0 - tMin;
      tSca = (tMax + tDif) / (this.Graph_Y_Max - this.Graph_Y_Min);
      tData = [];
      for (_j = 0, _len1 = aData.length; _j < _len1; _j++) {
        i = aData[_j];
        n = -i;
        tData.push(((n + tDif) / tSca) + this.Graph_Y_Min);
      }
      this.context.clearRect(0, 0, this.width, this.height);
      this.context.beginPath();
      this.context.rect(0, 0, this.width, this.height);
      this.context.fillStyle = this.bgColor;
      this.context.fill();
      this.context.beginPath();
      idxi = (this.Graph_X_Max - this.Graph_X_Min) / aData.length;
      idx = this.Graph_X_Min + (idxi / 2);
      this.context.moveTo(idx, tData[0]);
      for (_k = 0, _len2 = tData.length; _k < _len2; _k++) {
        i = tData[_k];
        n = i;
        this.context.lineTo(idx, n);
        idx += idxi;
      }
      this.context.lineWidth = this.Stroke_Width;
      this.context.strokeStyle = aColor || '#aaaaaa';
      this.context.lineCap = 'round';
      this.context.lineJoin = 'round';
      this.context.stroke();
      this.context.font = '20px Calibri';
      this.context.textAlign = 'left';
      this.context.fillStyle = '#aaaaaa';
      this.context.strokeStyle = '#000000';
      tCurrent = aData[aData.length - 1].toFixed(2);
      tX = this.width - (this.context.measureText(tCurrent).width + (this.Stroke_Width * 2));
      tY = 15 + (this.Stroke_Width * 2);
      this.context.strokeText(tCurrent, tX, tY);
      this.context.fillText(tCurrent, tX, tY);
      this.context.beginPath();
      this.context.rect(0, 0, this.width, this.height);
      this.context.lineWidth = this.Stroke_Width * 2;
      this.context.strokeStyle = '#aaaaaa';
      return this.context.stroke();
    };

    return toyGraph;

  })();
  
  window.toyGraph = toyGraph;

}).call(this);
